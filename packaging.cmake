set(PACKAGE_VERSION_SUFFIX "" CACHE STRING "Suffix package version (default: empty)")
set(PACKAGE_NAME_SUFFIX "" CACHE STRING "Suffix package name (default: empty)")


INCLUDE(InstallRequiredSystemLibraries)
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "GuLinux.net Planetary Imager for Linux")
SET(CPACK_PACKAGE_VENDOR "GuLinux <marco@gulinux.net>")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README.md")
#SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/src/")
SET(CPACK_PACKAGE_VERSION_MAJOR "${MAJOR_VERSION}")
SET(CPACK_PACKAGE_VERSION_MINOR "${MINOR_VERSION}")
SET(CPACK_PACKAGE_VERSION_PATCH "${PATCH_VERSION}")
set(CPACK_PACKAGE_FILE_NAME PlanetaryImager-${FULL_VERSION}-${CMAKE_SYSTEM_NAME}-${PlanetaryImager_ARCH}${PACKAGE_NAME_SUFFIX})
SET(CPACK_PACKAGE_CONTACT "marco@gulinux.net")
#SET(CPACK_STRIP_FILES "bin/planetary_imager")

set(CPACK_SET_DESTDIR On)

SET(CPACK_GENERATOR TGZ CACHE STRING "CPack generator type (default: TGZ)")


if( CPACK_GENERATOR STREQUAL "TGZ" OR CPACK_GENERATOR STREQUAL "TBZ2")
  install(PROGRAMS support/install.sh DESTINATION "/")
endif( CPACK_GENERATOR STREQUAL "TGZ" OR CPACK_GENERATOR STREQUAL "TBZ2")

if( CPACK_GENERATOR STREQUAL "NSIS")
    set(CPACK_SET_DESTDIR Off)
endif()

message(STATUS "Packaging PlanetaryImager with CPACK_GENERATOR=${CPACK_GENERATOR}")
INCLUDE(CPack)
