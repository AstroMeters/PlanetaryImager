#!/bin/bash
RELEASE="xenial"
root="arm-root"
if ! hash lsb_release >/dev/null 2>&1; then
	echo "lsb_release missing: not able to know distribution details" >&2
	exit 1
fi


if ! hash update-binfmts >/dev/null 2>&1 || ! hash qemu-arm-static; then
	case "$( lsb_release -is )" in
		"Arch")
			AUR_MANAGER="${AUR_MANAGER:-packer}" # overwrite with env variable if you want to use another compatible package, like yaourt, etc
			sudo -u $SUDO_USER $AUR_MANAGER -S qemu-user-static binfmt-support
			;;
		"Ubuntu")
			apt-get install -y qemu-user-static binfmt-support debootstrap
  			;;
	esac
fi

update-binfmts --enable
alias qemu-debootstrap=debootstrap
if ! [[ -r "$root"/usr/bin/qemu-arm-static ]]; then
       debootstrap --foreign --arch armhf $RELEASE "$root" http://ports.ubuntu.com/
       cp -av "$( which qemu-arm-static )" $root/usr/bin
       DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true \
	        LC_ALL=C LANGUAGE=C LANG=C chroot $root/ /debootstrap/debootstrap --second-stage
       DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true \
	        LC_ALL=C LANGUAGE=C LANG=C chroot $root dpkg --configure -a
       rm -rf $root/debootstrap
fi
cat >"$root"/etc/apt/sources.list <<EOF
deb http://ports.ubuntu.com/ubuntu-ports xenial main restricted universe multiverse
EOF

(
  set -x
  tar --numeric-owner --create --auto-compress --file "image/arm-root.tar" --directory "$root" --transform='s,^./,,' .
)

(
  cd image
  docker build -t ubuntu-${RELEASE}-arm .
)

#rrun apt-get update && rrun apt-get install -y git cmake autoconf libudev-dev qtbase5-dev build-essential libopencv-dev libqcustomplot-dev libboost-all-dev
#if ! [[ -d "$root"/opt/libusb-git ]]; then
#  rrun <<EOF
#cd / && git clone https://github.com/libusb/libusb.git libusb-git && cd libusb-git && ./autogen.sh && ./configure --enable-static=yes --enable-shared=no --prefix=/opt/libusb-git && make all install && cd / && rm -rf /libusb-git
#EOF
#fi
